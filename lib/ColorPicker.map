{"version":3,"sources":["webpack://reactist/webpack/universalModuleDefinition","webpack://reactist/webpack/bootstrap","webpack://reactist/external \"prop-types\"","webpack://reactist/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://reactist/external \"classnames\"","webpack://reactist/external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://reactist/./src/components/utils/PositioningUtils.js","webpack://reactist/./src/components/Popover.jsx","webpack://reactist/./src/components/Dropdown.jsx","webpack://reactist/./src/components/Tooltip.jsx","webpack://reactist/./src/components/ColorPicker.jsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","hasEnoughSpace","windowDimensions","elementDimensions","wrapperDimensions","wrapperPosition","position","gap","windowHeight","height","windowWidth","width","elementHeight","elementWidth","wrapperHeight","wrapperWidth","wrapperX","x","wrapperY","y","verticalPosition","_calculateVerticalPosition","horizontalPosition","_calculateHorizontalPosition","canPlaceVertically","canPlaceHorizontally","calculateTopCenterPosition","calculateBottomCenterPosition","calculateRightCenterPosition","calculateLeftCenterPosition","calculatePosition","Popover","props","allowVaguePositioning","gapSize","wrapperRect","wrapper","getBoundingClientRect","popoverRect","popover","documentEl","document","documentElement","node","foundParent","getComputedStyle","getPropertyValue","parentElement","nodeRect","popoverDimensions","wrapperPositionRelative","left","top","wrapperPositionAbsolute","positionsToTry","index","length","currentPosition","popoverPosition","style","className","_getClassNameForPosition","visible","withArrow","arrowClassName","classNames","arrow_top","arrow_right","arrow_bottom","arrow_left","popoverRef","wrapperRef","this","_updatePopoverPosition","prevProps","positionChanged","vaguePositioningChanged","visibilityChanged","arrowChanged","gapSizeChanged","contentChanged","content","wrapperClassName","popoverClassName","onMouseEnter","onMouseLeave","onClick","trigger","popoverClass","popoverContentClass","wrapperClass","ref","_updateWrapperRef","_updatePopoverRef","React","Component","displayName","defaultProps","propTypes","PropTypes","oneOf","bool","isRequired","oneOfType","string","arrayOf","func","number","Box","context","state","show_body","_handleClickOutside","_setPosition","_toggleShowBody","_timeout","removeEventListener","clearTimeout","event","ReactDOM","findDOMNode","contains","target","allowBodyInteractions","setTimeout","onHideBody","onShowBody","addEventListener","setState","_trigger","children","cloneElement","body","scrolling_parent","getElementById","dropdown","dropdown_vertical_position","offsetTop","dropdown_trigger_height","querySelector","clientHeight","dropdown_body_height","scrollTop","right","setPosition","class_name","body_wrapper","with_arrow","bottom","contentMarkup","display","_getBodyComponent","_getTriggerComponent","any","Trigger","_onClick","preventDefault","stopPropagation","Body","id","Tooltip","_delayAction","hideOnScroll","_initScrollListener","delayShow","_clearDelayTimeout","_removeScrollListener","delayHide","tooltip","nextProps","nextState","text","_hide","delayTimeout","actionFn","delay","tooltipClassName","inverted","tooltipClass","arrowClass","Children","map","child","isValidElement","_show","_updateTooltipRef","COLORS","_isNamedColor","color","_getColor","colorList","colorIndex","ColorPicker","small","onChange","classnames","backgroundColor","reduce","items","currentColor","currentIndex","isNamed","push","ColorItem","isActive","shape","item"],"mappings":"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","file":"ColorPicker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"), require(\"classnames\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"reactist\", [\"prop-types\", \"react\", \"classnames\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"reactist\"] = factory(require(\"prop-types\"), require(\"react\"), require(\"classnames\"), require(\"react-dom\"));\n\telse\n\t\troot[\"reactist\"] = factory(root[\"prop-types\"], root[\"React\"], root[\"classnames\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","const hasEnoughSpace = (\n    windowDimensions,\n    elementDimensions,\n    wrapperDimensions,\n    wrapperPosition,\n    position,\n    gap = 0\n) => {\n    const { height: windowHeight, width: windowWidth } = windowDimensions\n    const { height: elementHeight, width: elementWidth } = elementDimensions\n    const { height: wrapperHeight, width: wrapperWidth } = wrapperDimensions\n    const { x: wrapperX, y: wrapperY } = wrapperPosition\n\n    const verticalPosition = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const horizontalPosition = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const canPlaceVertically =\n        verticalPosition >= 0 && verticalPosition + elementWidth <= windowWidth\n    const canPlaceHorizontally =\n        horizontalPosition >= 0 &&\n        horizontalPosition + elementHeight <= windowHeight\n\n    if (position === 'top') {\n        return canPlaceVertically && wrapperY - elementHeight - gap >= 0\n    } else if (position === 'right') {\n        return (\n            canPlaceHorizontally &&\n            wrapperX + wrapperWidth + elementWidth + gap <= windowWidth\n        )\n    } else if (position === 'left') {\n        return canPlaceHorizontally && wrapperX - elementWidth - gap >= 0\n    } else if (position === 'bottom') {\n        return (\n            canPlaceVertically &&\n            wrapperY + wrapperHeight + elementHeight + gap <= windowHeight\n        )\n    }\n    return false\n}\n\nconst _calculateVerticalPosition = (\n    wrapperPosition,\n    wrapperDimensions,\n    elementDimensions\n) => {\n    return (\n        wrapperPosition.x +\n        (wrapperDimensions.width - elementDimensions.width) / 2\n    )\n}\nconst _calculateHorizontalPosition = (\n    wrapperPosition,\n    wrapperDimensions,\n    elementDimensions\n) => {\n    return (\n        wrapperPosition.y +\n        (wrapperDimensions.height - elementDimensions.height) / 2\n    )\n}\n\nconst calculateTopCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const y = wrapperPosition.y - elementDimensions.height - gap\n    return { x, y }\n}\n\nconst calculateBottomCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const y = wrapperPosition.y + wrapperDimensions.height + gap\n    return { x, y }\n}\n\nconst calculateRightCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = wrapperPosition.x + wrapperDimensions.width + gap\n    const y = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    return { x, y }\n}\n\nconst calculateLeftCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = wrapperPosition.x - elementDimensions.width - gap\n    const y = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    return { x, y }\n}\n\nconst calculatePosition = (\n    position,\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    if (position === 'top') {\n        return calculateTopCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'right') {\n        return calculateRightCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'bottom') {\n        return calculateBottomCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'left') {\n        return calculateLeftCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    }\n    return wrapperPosition\n}\n\nexport {\n    hasEnoughSpace,\n    calculatePosition,\n    calculateTopCenterPosition,\n    calculateBottomCenterPosition,\n    calculateRightCenterPosition,\n    calculateLeftCenterPosition\n}\n","import './styles/popover.less'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { hasEnoughSpace, calculatePosition } from './utils/PositioningUtils'\n\nclass Popover extends React.Component {\n    componentDidMount() {\n        if (this.props.visible) {\n            this._updatePopoverPosition()\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.wrapper && this.props.visible) {\n            const positionChanged = prevProps.position !== this.props.position\n            const vaguePositioningChanged =\n                prevProps.allowVaguePositioning !==\n                this.props.allowVaguePositioning\n            const visibilityChanged = prevProps.visible !== this.props.visible\n            const arrowChanged = prevProps.withArrow !== this.props.withArrow\n            const gapSizeChanged = prevProps.gapSize !== this.props.gapSize\n            const contentChanged = prevProps.content !== this.props.content\n            if (\n                positionChanged ||\n                vaguePositioningChanged ||\n                visibilityChanged ||\n                arrowChanged ||\n                gapSizeChanged ||\n                contentChanged\n            ) {\n                this._updatePopoverPosition()\n            }\n        }\n    }\n\n    _updatePopoverPosition = () => {\n        const { position, allowVaguePositioning, gapSize } = this.props\n        const wrapperRect = this.wrapper.getBoundingClientRect()\n        const popoverRect = this.popover.getBoundingClientRect()\n\n        // Instead of using the documentElement find the nearest absolutely positioned element\n        const documentEl = document.documentElement\n        let node = this.wrapper\n        let foundParent = false\n        while (!foundParent) {\n            const styles = getComputedStyle(node)\n            const position = styles.getPropertyValue('position')\n            if (\n                position === 'absolute' ||\n                node === documentEl ||\n                !node.parentElement\n            ) {\n                foundParent = true\n            } else {\n                node = node.parentElement\n            }\n        }\n        const nodeRect = node.getBoundingClientRect()\n        const windowDimensions = {\n            height: nodeRect.height,\n            width: nodeRect.width\n        }\n\n        const popoverDimensions = {\n            height: popoverRect.height,\n            width: popoverRect.width\n        }\n        const wrapperDimensions = {\n            height: wrapperRect.height,\n            width: wrapperRect.width\n        }\n        const wrapperPositionRelative = {\n            x: wrapperRect.left - nodeRect.left,\n            y: wrapperRect.top - nodeRect.top\n        }\n        const wrapperPositionAbsolute = {\n            x: wrapperRect.left,\n            y: wrapperRect.top\n        }\n\n        const positionsToTry =\n            position === 'auto'\n                ? ['top', 'right', 'bottom', 'left', 'top']\n                : position === 'vertical'\n                    ? ['top', 'bottom']\n                    : position === 'horizontal'\n                        ? ['left', 'right']\n                        : [position]\n\n        for (let index = 0; index < positionsToTry.length; index++) {\n            const currentPosition = positionsToTry[index]\n            const enoughSpaceAtPosition = hasEnoughSpace(\n                windowDimensions,\n                popoverDimensions,\n                wrapperDimensions,\n                wrapperPositionRelative,\n                currentPosition,\n                gapSize\n            )\n\n            if (enoughSpaceAtPosition || index === positionsToTry.length - 1) {\n                const popoverPosition = calculatePosition(\n                    currentPosition,\n                    wrapperDimensions,\n                    wrapperPositionAbsolute,\n                    popoverDimensions,\n                    gapSize\n                )\n                this.popover.style.top = `${popoverPosition.y}px`\n                this.popover.style.left = `${popoverPosition.x}px`\n\n                /**\n                 * Correct placement if vague positioning is allowed.\n                 * When it's not allowed we \"cut off\" popovers and display them\n                 * out of the viewport to maintain their centered position.\n                 */\n                if (allowVaguePositioning) {\n                    // correct horizontally\n                    if (popoverPosition.x < 0) {\n                        this.popover.style.left = `${2 * gapSize}px`\n                    }\n                    // correct vertically\n                    if (\n                        popoverPosition.y + popoverDimensions.height >\n                        windowDimensions.height\n                    ) {\n                        this.popover.style.top = `${windowDimensions.height -\n                            popoverDimensions.height -\n                            2 * gapSize}px`\n                    }\n                }\n\n                if (currentPosition !== position) {\n                    this.popover.className = this._getClassNameForPosition(\n                        currentPosition\n                    )\n                }\n                break\n            }\n        }\n    }\n\n    _getClassNameForPosition = position => {\n        const { visible, withArrow, arrowClassName } = this.props\n        const className = classNames('reactist popover', { visible })\n\n        if (visible && withArrow) {\n            return classNames(className, arrowClassName, {\n                arrow_top: position === 'bottom',\n                arrow_right: position === 'left',\n                arrow_bottom: position === 'auto' || position === 'top',\n                arrow_left: position === 'right'\n            })\n        }\n        return className\n    }\n\n    _updatePopoverRef = popover => {\n        this.popover = popover\n        if (typeof this.props.popoverRef === 'function') {\n            this.props.popoverRef(popover)\n        }\n    }\n\n    _updateWrapperRef = wrapper => {\n        this.wrapper = wrapper\n        if (typeof this.props.wrapperRef === 'function') {\n            this.props.wrapperRef(wrapper)\n        }\n    }\n\n    render() {\n        const {\n            position,\n            wrapperClassName,\n            popoverClassName,\n            onMouseEnter,\n            onMouseLeave,\n            onClick,\n            trigger,\n            content\n        } = this.props\n        const popoverClass = this._getClassNameForPosition(position)\n        const popoverContentClass = classNames(\n            'reactist popover__content',\n            popoverClassName\n        )\n        const wrapperClass = classNames(\n            'reactist popover__wrapper',\n            wrapperClassName\n        )\n\n        return (\n            <span\n                className={wrapperClass}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                ref={this._updateWrapperRef}\n            >\n                {trigger}\n                <span className={popoverClass} ref={this._updatePopoverRef}>\n                    {this.props.visible ? (\n                        <span className={popoverContentClass}>\n                            {typeof content === 'function'\n                                ? content()\n                                : content}\n                        </span>\n                    ) : null}\n                </span>\n            </span>\n        )\n    }\n}\nPopover.displayName = 'Popover'\nPopover.defaultProps = {\n    position: 'auto',\n    gapSize: 5 // default size of the arrow (see `tooltip.less`)\n}\nPopover.propTypes = {\n    /**\n     * Position of the popover. Defaults to `auto`.\n     * `auto` tries to position the tooltip to the top,\n     * if there's not enough space it tries to position the tooltip clockwise (right, bottom, left).\n     * Setting a distinct value like `right` will always position the popover right, regardless of available space.\n     * Specifying `horizontal` will only try to position the tooltip left and right in that order.\n     * Specifying `vertical` will only try to position the tooltip top and bottom in that order.\n     */\n    position: PropTypes.oneOf([\n        'auto',\n        'top',\n        'right',\n        'bottom',\n        'left',\n        'horizontal',\n        'vertical'\n    ]),\n    /**\n     * Whether vague positioning is allowed. When set to true the popover prefers to be fully visible over being correctly centered.\n     */\n    allowVaguePositioning: PropTypes.bool,\n    /** Whether or not the popover is currently visibble. */\n    visible: PropTypes.bool.isRequired,\n    /** Content slot of the popover. */\n    content: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.func,\n        PropTypes.node\n    ]).isRequired,\n    /** Trigger slot of the popover. */\n    trigger: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    /** Function to be called when the trigger is clicked. */\n    onClick: PropTypes.func,\n    /** Function to be called when the mouse enters the trigger. */\n    onMouseEnter: PropTypes.func,\n    /** Function to be called when the mouse leaves the trigger. */\n    onMouseLeave: PropTypes.func,\n    /** Additional css class that is applied to the wrapper element. */\n    wrapperClassName: PropTypes.string,\n    /** Additional css class that is applied to the popover element. */\n    popoverClassName: PropTypes.string,\n    /** Additional css class that is applied to style the arrow. Not applied when `withArrow` is false. */\n    arrowClassName: PropTypes.string,\n    /** Whether or not the popover should have a centered arrow pointing to the trigger element. */\n    withArrow: PropTypes.bool,\n    /** Gap between the popover wrapper and the arrow. */\n    gapSize: PropTypes.number,\n    /** ref of the wrapper in case you need to manipulate it. */\n    wrapperRef: PropTypes.func,\n    /** ref of the popover in case you need to manipulate it. */\n    popoverRef: PropTypes.func\n}\n\nexport default Popover\n","import './styles/dropdown.less'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nclass Box extends React.Component {\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n            show_body: false,\n            top: props.top || false\n        }\n\n        this._handleClickOutside = this._handleClickOutside.bind(this)\n        this._setPosition = this._setPosition.bind(this)\n        this._toggleShowBody = this._toggleShowBody.bind(this)\n\n        this._timeout = null\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this._handleClickOutside, true)\n        if (this._timeout) {\n            clearTimeout(this._timeout)\n        }\n    }\n\n    _handleClickOutside(event) {\n        const dropdown_dom_node = ReactDOM.findDOMNode(this)\n\n        if (!dropdown_dom_node.contains(event.target)) this._toggleShowBody()\n        else if (!this.props.allowBodyInteractions) {\n            // won't close when body interactions are allowed\n            this._timeout = setTimeout(() => {\n                if (this.state.show_body) {\n                    this._toggleShowBody()\n                }\n            }, 100)\n        }\n    }\n\n    _toggleShowBody() {\n        if (!this.state.show_body) {\n            // will show\n            if (this.props.onShowBody) this.props.onShowBody()\n            document.addEventListener('click', this._handleClickOutside, true)\n        } else {\n            // will hide\n            if (this.props.onHideBody) this.props.onHideBody()\n            document.removeEventListener(\n                'click',\n                this._handleClickOutside,\n                true\n            )\n        }\n\n        this.setState({\n            show_body: !this.state.show_body\n        })\n    }\n\n    _getTriggerComponent() {\n        let _trigger = this.props.children[0]\n        return React.cloneElement(_trigger, { onClick: this._toggleShowBody })\n    }\n\n    // https://facebook.github.io/react/docs/refs-and-the-dom.html#exposing-dom-refs-to-parent-components\n    _setPosition(body) {\n        if (body) {\n            const scrolling_parent = document.getElementById(\n                this.props.scrolling_parent\n            )\n\n            if (scrolling_parent) {\n                const dropdown = ReactDOM.findDOMNode(this)\n                const dropdown_vertical_position = ReactDOM.findDOMNode(this)\n                    .offsetTop\n                const dropdown_trigger_height = dropdown.querySelector(\n                    '.trigger'\n                ).clientHeight\n                const dropdown_body_height = body.clientHeight\n\n                const scrolling_parent_height = scrolling_parent.clientHeight\n                const scrolling_parent_offset = scrolling_parent.scrollTop\n\n                const bottom_offset =\n                    scrolling_parent_height +\n                    scrolling_parent_offset -\n                    dropdown_vertical_position -\n                    dropdown_trigger_height\n\n                const top = bottom_offset < dropdown_body_height\n\n                if (top !== this.state.top) {\n                    this.setState({ top })\n                }\n            }\n        }\n    }\n\n    _getBodyComponent() {\n        if (!this.state.show_body) {\n            return null\n        }\n        const { top } = this.state\n        const { right = false, children } = this.props\n        const props = { top, right, setPosition: this._setPosition }\n\n        const class_name = classNames({\n            body_wrapper: true,\n            with_arrow: true,\n            top: top,\n            bottom: !top\n        })\n\n        const body = children[1]\n\n        const contentMarkup =\n            typeof body === 'function'\n                ? body(props)\n                : React.cloneElement(body, props)\n        return (\n            <div className={class_name} style={{ position: 'relative' }}>\n                {contentMarkup}\n            </div>\n        )\n    }\n\n    render() {\n        const className = classNames('reactist dropdown', this.props.className)\n        const { top } = this.state\n\n        return (\n            <div style={{ display: 'inline-block' }} className={className}>\n                {top && this._getBodyComponent()}\n                {this._getTriggerComponent()}\n                {!top && this._getBodyComponent()}\n            </div>\n        )\n    }\n}\nBox.displayName = 'Dropdown.Box'\nBox.propTypes = {\n    /** Whether the dropdown should open to the top. */\n    top: PropTypes.bool,\n    /** Whether the dropdown should open to the right. */\n    right: PropTypes.bool,\n    /** Id of the scrolling parent element to place dropdown in it. */\n    scrolling_parent: PropTypes.string,\n    /** Whether to keep dropdown open when interacted with the Body content. */\n    allowBodyInteractions: PropTypes.bool,\n    /** Callback function when the body is shown. */\n    onShowBody: PropTypes.func,\n    /** Callback function when the body is hidden. */\n    onHideBody: PropTypes.func,\n    /** Additional css class applied to the Dropdown. */\n    className: PropTypes.string,\n    /** Should be two elements: Dropdown.Trigger and Dropdown.Body.\n     * Second element can be a function, which will be called only if it is open */\n    children: PropTypes.any\n}\n\nclass Trigger extends React.Component {\n    constructor(props, context) {\n        super(props, context)\n        this._onClick = this._onClick.bind(this)\n    }\n\n    _onClick(event) {\n        event.preventDefault()\n        event.stopPropagation()\n        this.props.onClick(event)\n    }\n\n    render() {\n        const style = {\n            display: 'block'\n        }\n\n        return (\n            <div style={style} className=\"trigger\" onClick={this._onClick}>\n                {this.props.children}\n            </div>\n        )\n    }\n}\nTrigger.displayName = 'Dropdown.Trigger'\nTrigger.propTypes = {\n    /** INTERNAL Callback when the trigger is clicked. Setting this yourself won't have an effect. */\n    onClick: PropTypes.func,\n    /** Content of the dropdown trigger. Can be anything from a string to component(s). */\n    children: PropTypes.any\n}\n\nclass Body extends React.Component {\n    render() {\n        let style = {\n            position: 'absolute',\n            right: 0,\n            top: 0\n        }\n\n        if (this.props.top) {\n            style.top = 'auto'\n            style.bottom = 0\n        }\n\n        if (this.props.right) {\n            style.right = 'auto'\n            style.left = 0\n        }\n\n        return (\n            <div\n                ref={this.props.setPosition}\n                style={style}\n                className=\"body\"\n                id=\"reactist-dropdown-body\"\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}\nBody.displayName = 'Dropdown.Body'\nBody.propTypes = {\n    /** INTERNAL Whether the dropdown should open to the top. Set this on the Dropdown.Box. */\n    top: PropTypes.bool,\n    /** INTERNAL Whether the dropdown should open to the right. Set this on the Dropdown.Box. */\n    right: PropTypes.bool,\n    /** INTERNAL Callback to correctly set the position of the dropdown. Setting this yourself wont' have an effect. */\n    setPosition: PropTypes.func,\n    /** Content of the dropdown body. Can be anything from a string to component(s). */\n    children: PropTypes.any\n}\n\nexport default { Box, Trigger, Body }\n","import './styles/tooltip.less'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport Popover from './Popover'\n\nclass Tooltip extends React.Component {\n    state = { visible: false }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        // only update on state or prop changes\n        return (\n            this.state.visible !== nextState.visible ||\n            this.props.position !== nextProps.position ||\n            this.props.text !== nextProps.text ||\n            this.props.hideOnScroll !== nextProps.hideOnScroll ||\n            this.props.delayShow !== nextProps.delayShow ||\n            this.props.delayHide !== nextProps.delayHide ||\n            this.props.gapSize !== nextProps.gapSize ||\n            this.props.children !== nextProps.children\n        )\n    }\n\n    componentWillUnmount() {\n        this._clearDelayTimeout()\n        this._removeScrollListener()\n    }\n\n    _initScrollListener() {\n        document.addEventListener('scroll', this._hide, true)\n    }\n\n    _removeScrollListener() {\n        document.removeEventListener('scroll', this._hide, true)\n    }\n\n    _clearDelayTimeout() {\n        if (this.delayTimeout) {\n            clearTimeout(this.delayTimeout)\n        }\n    }\n\n    _show = () => {\n        this._delayAction(() => {\n            this.setState(() => ({ visible: true }))\n            if (this.props.hideOnScroll) {\n                this._initScrollListener()\n            }\n        }, this.props.delayShow)\n    }\n\n    _hide = () => {\n        this._delayAction(() => {\n            this._clearDelayTimeout()\n            this.setState(() => ({ visible: false }))\n            if (this.props.hideOnScroll) {\n                this._removeScrollListener()\n            }\n        }, this.props.delayHide)\n    }\n\n    _delayAction(actionFn, delay) {\n        this._clearDelayTimeout()\n        this.delayTimeout = setTimeout(actionFn, delay)\n    }\n\n    _updateTooltipRef = tooltip => {\n        this.tooltip = tooltip\n    }\n\n    _updateWrapperRef = wrapper => {\n        this.wrapper = wrapper\n    }\n\n    render() {\n        const {\n            position,\n            allowVaguePositioning,\n            wrapperClassName,\n            tooltipClassName,\n            text,\n            children,\n            gapSize,\n            inverted,\n            withArrow\n        } = this.props\n\n        const wrapperClass = classNames(\n            'reactist tooltip__wrapper',\n            wrapperClassName\n        )\n        const tooltipClass = classNames(\n            'reactist tooltip__text',\n            tooltipClassName,\n            {\n                inverted\n            }\n        )\n        const arrowClass = classNames('reactist tooltip__arrow', { inverted })\n\n        if (!text) {\n            return <div className={wrapperClass}>{children}</div>\n        }\n\n        // wrap on click of trigger to hide tooltip on click\n        const trigger = React.Children.map(children, child => {\n            if (React.isValidElement(child)) {\n                /**\n                 * We can only attach click listeners to valid elements.\n                 * When passing in a string / number as child we cannot attach the listener.\n                 */\n                return React.cloneElement(child, {\n                    onClick: event => {\n                        this._hide()\n                        if (typeof child.props.onClick === 'function') {\n                            child.props.onClick(event)\n                        }\n                    }\n                })\n            } else {\n                return child\n            }\n        })\n\n        return (\n            <Popover\n                position={position}\n                visible={this.state.visible}\n                trigger={trigger}\n                content={text}\n                popoverClassName={tooltipClass}\n                wrapperClassName={wrapperClass}\n                arrowClassName={arrowClass}\n                onMouseEnter={this._show}\n                onMouseLeave={this._hide}\n                allowVaguePositioning={allowVaguePositioning}\n                gapSize={gapSize}\n                popoverRef={this._updateTooltipRef}\n                wrapperRef={this._updateWrapperRef}\n                withArrow={withArrow}\n            />\n        )\n    }\n}\nTooltip.displayName = 'Tooltip'\nTooltip.defaultProps = {\n    position: 'auto',\n    hideOnScroll: true,\n    delayShow: 500,\n    delayHide: 0,\n    allowVaguePositioning: false,\n    inverted: false,\n    withArrow: true,\n    gapSize: 5 // default size of the arrow (see `tooltip.less`)\n}\nTooltip.propTypes = {\n    /**\n     * Position of the tooltip. Defaults to `auto`.\n     * `auto` tries to position the tooltip to the top,\n     * if there's not enough space it tries to position the tooltip clockwise (right, bottom, left).\n     * Setting a distinct value like `right` will always position the tooltip right, regardless of available space.\n     * Specifying `horizontal` will only try to position the tooltip left and right in that order.\n     * Specifying `vertical` will only try to position the tooltip top and bottom in that order.\n     */\n    position: PropTypes.oneOf([\n        'auto',\n        'top',\n        'right',\n        'bottom',\n        'left',\n        'horizontal',\n        'vertical'\n    ]),\n    /**\n     * Whether vague positioning is allowed. When set to true the tooltip prefers to be fully visible over being correctly centered.\n     */\n    allowVaguePositioning: PropTypes.bool,\n    /** Text that is displayed inside the tooltip */\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.func,\n        PropTypes.node\n    ]).isRequired,\n    /** Set whether scrolling should hide the tooltip or not. */\n    hideOnScroll: PropTypes.bool,\n    /** How long to wait after hovering before the tooltip is shown (in ms). */\n    delayShow: PropTypes.number,\n    /** How long to wait after unhovering before the tooltip is hidden (in ms). */\n    delayHide: PropTypes.number,\n    /** Children that are wrapped by the toolip. */\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    /** Additional css class that is applied to the wrapper element. */\n    wrapperClassName: PropTypes.string,\n    /** Additional css class that is applied to the tooltip element. */\n    tooltipClassName: PropTypes.string,\n    /** Inverted tooltips have a light background with dark text. */\n    inverted: PropTypes.bool,\n    /** Gap between the tooltip wrapper and the arrow  */\n    gapSize: PropTypes.number,\n    /** Whether or not the tooltip should have a centered arrow pointing to the trigger element. */\n    withArrow: PropTypes.bool\n}\n\nexport default Tooltip\n","import './styles/color_picker.less'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport Dropdown from './Dropdown'\nimport Tooltip from './Tooltip'\n\nconst COLORS = [\n    '#606060',\n    '#4A90E2',\n    '#03B3B2',\n    '#008299',\n    '#82BA00',\n    '#D24726',\n    '#AC193D',\n    '#DC4FAD',\n    '#3BD5FB',\n    '#74E8D3',\n    '#FFCC00',\n    '#FB886E',\n    '#CCCCCC'\n]\n\nconst _isNamedColor = color => typeof color !== 'string'\nconst _getColor = (colorList, colorIndex) => {\n    const index = colorIndex >= colorList.length ? 0 : colorIndex\n    return colorList[index]\n}\n\nconst ColorPicker = ({ color, small, onChange, colorList = COLORS }) => (\n    <Dropdown.Box right className=\"reactist color_picker\">\n        <Dropdown.Trigger>\n            <span\n                className={classnames('color_trigger', { small })}\n                style={{\n                    backgroundColor: _isNamedColor(colorList[color])\n                        ? _getColor(colorList, color).color\n                        : _getColor(colorList, color)\n                }}\n            >\n                <span className=\"color_trigger--inner_ring\" />\n            </span>\n        </Dropdown.Trigger>\n        <Dropdown.Body>\n            <div className=\"color_options\">\n                {colorList.reduce((items, currentColor, currentIndex) => {\n                    const isNamed = _isNamedColor(currentColor)\n                    items.push(\n                        <ColorItem\n                            isActive={\n                                color >= colorList.length\n                                    ? currentIndex === 0\n                                    : currentIndex === color\n                            }\n                            key={currentIndex}\n                            color={isNamed ? currentColor.color : currentColor}\n                            colorIndex={currentIndex}\n                            onClick={onChange}\n                            tooltip={isNamed ? currentColor.name : null}\n                        />\n                    )\n                    return items\n                }, [])}\n            </div>\n        </Dropdown.Body>\n    </Dropdown.Box>\n)\nColorPicker.displayName = 'ColorPicker'\nColorPicker.defaultProps = {\n    color: 0\n}\nColorPicker.propTypes = {\n    /** Currently selected color. Needs to be the index of the COLORS array. */\n    color: PropTypes.number.isRequired,\n    /** Callback that is invoked when a color has been selected. Is called with the index of the COLORS array. */\n    onChange: PropTypes.func,\n    /** Optional flag whether a smaller version of the color picker should be rendered. */\n    small: PropTypes.bool,\n    /** Optional list of color codes. Either as an array of strings or an array of objects with the color name. Defaults to COLORS array without names. */\n    colorList: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.shape({ color: PropTypes.string, name: PropTypes.string })\n        ])\n    )\n}\n\nconst ColorItem = ({ color, colorIndex, isActive, onClick, tooltip }) => {\n    const item = (\n        <span\n            className={'reactist color_item' + (isActive ? ' active' : '')}\n            style={{ backgroundColor: color }}\n            onClick={() => onClick && onClick(colorIndex)}\n        >\n            <span className=\"color_item--inner_ring\" />\n        </span>\n    )\n\n    return tooltip ? <Tooltip text={tooltip}>{item}</Tooltip> : item\n}\nColorItem.displayName = 'ColorItem'\nColorItem.propTypes = {\n    /** The color of the ColorItem as string. */\n    color: PropTypes.string.isRequired,\n    /** Index of the color to display. Is based upon the colorList array. */\n    colorIndex: PropTypes.number.isRequired,\n    /** Flag that can be used to highlight the currently selected item. */\n    isActive: PropTypes.bool,\n    /** Optional callback that is called when the item is clicked. */\n    onClick: PropTypes.func,\n    /** Optional tooltip to be shown when hovering the item. */\n    tooltip: PropTypes.string\n}\n\nexport default ColorPicker\nexport { ColorItem, COLORS }\n"],"sourceRoot":""}